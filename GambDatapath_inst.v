// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 720 11/11/2020)
// Created on Wed Jun 28 16:02:30 2023

GambDatapath GambDatapath_inst
(
	.CLOCK_50(CLOCK_50_sig) ,	// input  CLOCK_50_sig
	.btn_in(btn_in_sig) ,	// input  btn_in_sig
	.switches(switches_sig) ,	// input [17:0] switches_sig
	.LCD_ON(LCD_ON_sig) ,	// output  LCD_ON_sig
	.LCD_BLON(LCD_BLON_sig) ,	// output  LCD_BLON_sig
	.LCD_RW(LCD_RW_sig) ,	// output  LCD_RW_sig
	.LCD_EN(LCD_EN_sig) ,	// output  LCD_EN_sig
	.LCD_RS(LCD_RS_sig) ,	// output  LCD_RS_sig
	.HEX7(HEX7_sig) ,	// output [6:0] HEX7_sig
	.HEX6(HEX6_sig) ,	// output [6:0] HEX6_sig
	.HEX5(HEX5_sig) ,	// output [6:0] HEX5_sig
	.HEX4(HEX4_sig) ,	// output [6:0] HEX4_sig
	.HEX3(HEX3_sig) ,	// output [6:0] HEX3_sig
	.HEX2(HEX2_sig) ,	// output [6:0] HEX2_sig
	.HEX1(HEX1_sig) ,	// output [6:0] HEX1_sig
	.HEX0(HEX0_sig) ,	// output [6:0] HEX0_sig
	.LEDG(LEDG_sig) ,	// output [8:0] LEDG_sig
	.LEDR(LEDR_sig) ,	// output [17:0] LEDR_sig
	.LCD_DATA(LCD_DATA_sig) 	// inout [7:0] LCD_DATA_sig
);

